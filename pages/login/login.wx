<template>
  <view>

      <view class="login">
          <view class="logo">
              <image src="{{system_info.logo}}"></image>
          </view> 
          <view class="tip mix-top"> 
                <view class="des">申请获取以下权限</view>
                <view class="desc color-666">获取您的公开信息，如昵称、头像等。</view>
          </view>
         
          <!-- <view class="login-btn bg-color-main color-fff border-radius-10">授权登录</view> -->
          <button style="background-color:#38B935;margin-top:100rpx;" class="weui-btn p-t-10 p-b-10 border-radius-100 m-t-50" type="primary" bindtap="updateUserInfo">授权登录</button>          
      
          <button style="background-color:#bbb;margin-top:40rpx;" class="weui-btn p-t-10 p-b-10 border-radius-100 m-t-50" type="primary" bindtap="toBack">返回</button>  

      
      </view>


  </view>
</template>

<script>
var app = getApp();
var QQMapWX = require('../../static/utils/qqmap-wx-jssdk.js');
var city = require('../../static/data/city.js');
var qqmapsdk;
export default {
  config: {
    navigationBarTitleText: '登录'
  },
  data: {
    share_id:0,
    system_info:{},
      latitude:'',
      longitude:'',    
  },

  onLoad(e){ 
    if(e.share_id){
      this.setData({
        share_id:e.share_id
      })
    }
    if(e.scene){
      this.setData({
        share_id:decodeURIComponent(e.scene)
      })
    }

    this.getLocation();
    qqmapsdk = new QQMapWX({
      key: 'KHABZ-MEULF-GGWJE-NUL5G-4TGFT-4VFT4'
    }); 


  },

onShow(){
    this.getSettingInfo();
},


  toBack(){
    wx.navigateBack({})
  },


  updateUserInfo(e) {
    console.log(e);
    wx.showLoading({
      title: ''
    });
    var that = this;

    wx.getUserProfile({
      desc: '用于完善会员资料',
      success: (res) => {
          console.log(res)
          let data = res.userInfo;          
          if(that.data.share_id>0){
            data.share_id=that.data.share_id
          }
          wx.setStorageSync('WxUserInfo', data);
          wx.login({
            success: function success(res) {
              console.log(res);
              data.code = res.code;
              data.latitude = that.data.latitude;
              data.longitude = that.data.longitude;
              app.util.request({
                'url': 'entry/wxapp/wxappLogin',
                data:data,
                success(res) {
                      if(res.data.errno==0){
                        wx.setStorageSync('token', res.data.data);              
                        app.util.request({
                          'url': 'entry/wxapp/GetUserInfo',
                          data:{token:res.data.data},
                          success(r) {
                            console.log(r);
                            wx.setStorageSync('user', r.data.data)
                            if(that.data.share_id>0){
                                wx.switchTab({
                                  url:'../index/index'
                                })
                            }else{
                                wx.navigateBack({
                                  delta: 1,
                                })  
                            }                        
                          
                          }
                        })                     
                      }              
                }
              })    
            }
          });        
      },
      fail(e){
        console.log(e)
        wx.showToast({
          title: '不授权无法使用',
          icon: 'success',
          duration: 1000
        });        
      },
      complete(e){
        wx.hideLoading();
      }
    })

      return ;
    
    if (e.detail.rawData != undefined) {
      wx.showLoading({
        title: ''
      });

    } else {
      wx.showToast({
        title: '不授权无法使用',
        icon: 'success',
        duration: 1000
      });
    }
  },

  getUserInfo(){
    let that = this;
    app.util.request({
      'url': 'entry/wxapp/GetUserInfo',
      data:{token:wx.getStorageSync('token')},
      success(res) {
        console.log(res);
        that.setData({
          user:res.data.data
        })
        wx.setStorageSync('user', res.data.data)
      }
    })  
  }, 

  getSettingInfo(){
    let that = this;
    app.util.request({
      'url': 'entry/wxapp/getSettingInfo',
      data:{token:wx.getStorageSync('token')},
      success(res) {
        console.log(res);
        that.setData({
          system_info:res.data.data
        })
        wx.setStorageSync('system_info', res.data.data)
      }
    })  
  }, 


  updateUser(result) {

	//拿到用户数据时，通过app.util.getUserinfo将加密串传递给服务端
  //服务端会解密，并保存用户数据，生成sessionid返回
    wx.showLoading({
      title: '登录中',
    })
    app.util.getUserInfo(function(userInfo) {
		//这回userInfo为用户信息
       console.log(userInfo)
       let data =userInfo.wxInfo;
       wx.setStorageSync('UserInfo', data)
       data.sessionid = userInfo.sessionid;
       app.util.request({
        'url': 'entry/wxapp/UpdateUserInfo',
        data:data,
        success(res) {
          wx.hideLoading();
          console.log(res);
          if(res.data.errno==0){
            wx.setStorageSync('token', res.data.data);
            wx.navigateBack({
              delta: 1,
            })
          }
        }
      })       
    }, result.detail)
},

  onGotUserInfo(e){
    console.log(e);
    var that = this;
    wx.setStorageSync('userInfo', e.detail.userInfo);
    if (e.detail.rawData != undefined) {
      wx.showLoading({
        title: ''
      });
      wx.login({
        success: function success(res) {
          console.log(res);
          wx.request({
            url: hostUrl + '/micro/login',
            method: 'POST',
            data: {
              code: res.code,
              info: e.detail.userInfo,
            },
            success: function success(res) {
              wx.hideLoading();
              if (res.data.code == 200) {
                wx.setStorageSync("token", res.data.token);
                wx.navigateBack({});
              } else {
                wx.showToast({
                  title:'登陆失败'
                })
              }
            }
          });
        }
      });
    } else {
      wx.showToast({
        title: '不授权无法使用',
        icon: 'success',
        duration: 1000
      });
    }    
  },




  getLocation(){
    let vm = this;
    wx.getSetting({
      success(res) {
        if (!res.authSetting['scope.userLocation']) {
          wx.authorize({
            scope: 'scope.userLocation',
            success () {
              wx.getLocation({
                success (res) {
                    console.log(res);
                    vm.getLocal(res.latitude,res.longitude);
                }
              })
            },
          fail: function (res) {
            wx.showModal({
              content:'你拒绝了授权地理位置，或许会出现不能正常使用的情况'
            })
          },            
          })
        }else{
              wx.getLocation({
                success (res) {
                    console.log(res);
                    vm.getLocal(res.latitude,res.longitude);
                }
              })          
        }
      }
    })
  },


  // 获取当前地理位置
  getLocal: function (latitude, longitude) {
    this.setData({
      latitude:latitude,
      longitude:longitude,
    })
    let vm = this;
    qqmapsdk.reverseGeocoder({
      location: {
        latitude: latitude,
        longitude: longitude
      },
      success: function (res) {
        console.log("getLocal");
        console.log(res);
        wx.setStorageSync('location_city',res.result.ad_info.city);  
        wx.setStorageSync('location',res);        
      },
      fail: function (res) {
        console.log("fail");
        console.log(res);
      },
      complete: function (res) {
        // console.log(res);
      }
    });
  },


}
</script>

<style lang="less">
.login{
  width: 80%;
  margin: 0 auto;
  padding-top: 100rpx;
}

.logo{
  width: 160rpx;
  height: 160rpx;
  margin: 0 auto;
}

.logo image{
  display: block;
  width: 100%;
  height: 100%;
}

.tip{
  padding: 25px 0;
  margin-top: 20px;
}


.desc{
  margin: 10px 0 20px;
  font-weight: 700;
}

.login-btn{
  height: 80rpx;
  width: 100%;
  text-align: center;
  line-height: 80rpx;
}

button::after{
border: none;
}

button{
  margin-top: 100px;
}

</style>
